// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.1
// 	protoc        v5.26.1
// source: proto/urd/abci/minibank/types.proto

package minibank

import (
	third_party "emulator/proto/third_party"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type TransferTx struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	From      []string               `protobuf:"bytes,1,rep,name=from,proto3" json:"from,omitempty"`
	To        []string               `protobuf:"bytes,2,rep,name=to,proto3" json:"to,omitempty"`
	FromMoney []uint32               `protobuf:"varint,3,rep,packed,name=from_money,json=fromMoney,proto3" json:"from_money,omitempty"`
	ToMoney   []uint32               `protobuf:"varint,4,rep,packed,name=to_money,json=toMoney,proto3" json:"to_money,omitempty"`
	Buffer    []byte                 `protobuf:"bytes,5,opt,name=buffer,proto3" json:"buffer,omitempty"`
	Time      *third_party.Timestamp `protobuf:"bytes,6,opt,name=Time,proto3" json:"Time,omitempty"`
	Shards    []string               `protobuf:"bytes,7,rep,name=shards,proto3" json:"shards,omitempty"`
}

func (x *TransferTx) Reset() {
	*x = TransferTx{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_urd_abci_minibank_types_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransferTx) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransferTx) ProtoMessage() {}

func (x *TransferTx) ProtoReflect() protoreflect.Message {
	mi := &file_proto_urd_abci_minibank_types_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransferTx.ProtoReflect.Descriptor instead.
func (*TransferTx) Descriptor() ([]byte, []int) {
	return file_proto_urd_abci_minibank_types_proto_rawDescGZIP(), []int{0}
}

func (x *TransferTx) GetFrom() []string {
	if x != nil {
		return x.From
	}
	return nil
}

func (x *TransferTx) GetTo() []string {
	if x != nil {
		return x.To
	}
	return nil
}

func (x *TransferTx) GetFromMoney() []uint32 {
	if x != nil {
		return x.FromMoney
	}
	return nil
}

func (x *TransferTx) GetToMoney() []uint32 {
	if x != nil {
		return x.ToMoney
	}
	return nil
}

func (x *TransferTx) GetBuffer() []byte {
	if x != nil {
		return x.Buffer
	}
	return nil
}

func (x *TransferTx) GetTime() *third_party.Timestamp {
	if x != nil {
		return x.Time
	}
	return nil
}

func (x *TransferTx) GetShards() []string {
	if x != nil {
		return x.Shards
	}
	return nil
}

type InsertTx struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Account string                 `protobuf:"bytes,1,opt,name=account,proto3" json:"account,omitempty"`
	Money   uint32                 `protobuf:"varint,2,opt,name=money,proto3" json:"money,omitempty"`
	Buffer  []byte                 `protobuf:"bytes,3,opt,name=buffer,proto3" json:"buffer,omitempty"`
	Time    *third_party.Timestamp `protobuf:"bytes,4,opt,name=Time,proto3" json:"Time,omitempty"`
}

func (x *InsertTx) Reset() {
	*x = InsertTx{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_urd_abci_minibank_types_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InsertTx) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InsertTx) ProtoMessage() {}

func (x *InsertTx) ProtoReflect() protoreflect.Message {
	mi := &file_proto_urd_abci_minibank_types_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InsertTx.ProtoReflect.Descriptor instead.
func (*InsertTx) Descriptor() ([]byte, []int) {
	return file_proto_urd_abci_minibank_types_proto_rawDescGZIP(), []int{1}
}

func (x *InsertTx) GetAccount() string {
	if x != nil {
		return x.Account
	}
	return ""
}

func (x *InsertTx) GetMoney() uint32 {
	if x != nil {
		return x.Money
	}
	return 0
}

func (x *InsertTx) GetBuffer() []byte {
	if x != nil {
		return x.Buffer
	}
	return nil
}

func (x *InsertTx) GetTime() *third_party.Timestamp {
	if x != nil {
		return x.Time
	}
	return nil
}

type RelayTransferTxSet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Shards []string    `protobuf:"bytes,1,rep,name=shards,proto3" json:"shards,omitempty"`
	Datas  []*BankData `protobuf:"bytes,2,rep,name=datas,proto3" json:"datas,omitempty"`
	RawTx  []byte      `protobuf:"bytes,3,opt,name=raw_tx,json=rawTx,proto3" json:"raw_tx,omitempty"`
}

func (x *RelayTransferTxSet) Reset() {
	*x = RelayTransferTxSet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_urd_abci_minibank_types_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RelayTransferTxSet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RelayTransferTxSet) ProtoMessage() {}

func (x *RelayTransferTxSet) ProtoReflect() protoreflect.Message {
	mi := &file_proto_urd_abci_minibank_types_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RelayTransferTxSet.ProtoReflect.Descriptor instead.
func (*RelayTransferTxSet) Descriptor() ([]byte, []int) {
	return file_proto_urd_abci_minibank_types_proto_rawDescGZIP(), []int{2}
}

func (x *RelayTransferTxSet) GetShards() []string {
	if x != nil {
		return x.Shards
	}
	return nil
}

func (x *RelayTransferTxSet) GetDatas() []*BankData {
	if x != nil {
		return x.Datas
	}
	return nil
}

func (x *RelayTransferTxSet) GetRawTx() []byte {
	if x != nil {
		return x.RawTx
	}
	return nil
}

type RelayTransferTx struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Datas  *BankData `protobuf:"bytes,1,opt,name=datas,proto3" json:"datas,omitempty"`
	TxHash []byte    `protobuf:"bytes,2,opt,name=tx_hash,json=txHash,proto3" json:"tx_hash,omitempty"`
}

func (x *RelayTransferTx) Reset() {
	*x = RelayTransferTx{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_urd_abci_minibank_types_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RelayTransferTx) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RelayTransferTx) ProtoMessage() {}

func (x *RelayTransferTx) ProtoReflect() protoreflect.Message {
	mi := &file_proto_urd_abci_minibank_types_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RelayTransferTx.ProtoReflect.Descriptor instead.
func (*RelayTransferTx) Descriptor() ([]byte, []int) {
	return file_proto_urd_abci_minibank_types_proto_rawDescGZIP(), []int{3}
}

func (x *RelayTransferTx) GetDatas() *BankData {
	if x != nil {
		return x.Datas
	}
	return nil
}

func (x *RelayTransferTx) GetTxHash() []byte {
	if x != nil {
		return x.TxHash
	}
	return nil
}

type BankData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Keys   []string `protobuf:"bytes,1,rep,name=keys,proto3" json:"keys,omitempty"`
	OK     bool     `protobuf:"varint,2,opt,name=o_k,json=oK,proto3" json:"o_k,omitempty"`
	Values []uint32 `protobuf:"varint,3,rep,packed,name=values,proto3" json:"values,omitempty"`
}

func (x *BankData) Reset() {
	*x = BankData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_urd_abci_minibank_types_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BankData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BankData) ProtoMessage() {}

func (x *BankData) ProtoReflect() protoreflect.Message {
	mi := &file_proto_urd_abci_minibank_types_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BankData.ProtoReflect.Descriptor instead.
func (*BankData) Descriptor() ([]byte, []int) {
	return file_proto_urd_abci_minibank_types_proto_rawDescGZIP(), []int{4}
}

func (x *BankData) GetKeys() []string {
	if x != nil {
		return x.Keys
	}
	return nil
}

func (x *BankData) GetOK() bool {
	if x != nil {
		return x.OK
	}
	return false
}

func (x *BankData) GetValues() []uint32 {
	if x != nil {
		return x.Values
	}
	return nil
}

type RelayTransferTxList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Txs map[string]*BankData `protobuf:"bytes,1,rep,name=txs,proto3" json:"txs,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *RelayTransferTxList) Reset() {
	*x = RelayTransferTxList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_urd_abci_minibank_types_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RelayTransferTxList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RelayTransferTxList) ProtoMessage() {}

func (x *RelayTransferTxList) ProtoReflect() protoreflect.Message {
	mi := &file_proto_urd_abci_minibank_types_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RelayTransferTxList.ProtoReflect.Descriptor instead.
func (*RelayTransferTxList) Descriptor() ([]byte, []int) {
	return file_proto_urd_abci_minibank_types_proto_rawDescGZIP(), []int{5}
}

func (x *RelayTransferTxList) GetTxs() map[string]*BankData {
	if x != nil {
		return x.Txs
	}
	return nil
}

var File_proto_urd_abci_minibank_types_proto protoreflect.FileDescriptor

var file_proto_urd_abci_minibank_types_proto_rawDesc = []byte{
	0x0a, 0x23, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x75, 0x72, 0x64, 0x2f, 0x61, 0x62, 0x63, 0x69,
	0x2f, 0x6d, 0x69, 0x6e, 0x69, 0x62, 0x61, 0x6e, 0x6b, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x11, 0x75, 0x72, 0x64, 0x2e, 0x61, 0x62, 0x63, 0x69, 0x2e,
	0x6d, 0x69, 0x6e, 0x69, 0x62, 0x61, 0x6e, 0x6b, 0x1a, 0x21, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f,
	0x74, 0x68, 0x69, 0x72, 0x64, 0x5f, 0x70, 0x61, 0x72, 0x74, 0x79, 0x2f, 0x74, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xca, 0x01, 0x0a, 0x0a,
	0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x54, 0x78, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x72,
	0x6f, 0x6d, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x12, 0x0e,
	0x0a, 0x02, 0x74, 0x6f, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x02, 0x74, 0x6f, 0x12, 0x1d,
	0x0a, 0x0a, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x6d, 0x6f, 0x6e, 0x65, 0x79, 0x18, 0x03, 0x20, 0x03,
	0x28, 0x0d, 0x52, 0x09, 0x66, 0x72, 0x6f, 0x6d, 0x4d, 0x6f, 0x6e, 0x65, 0x79, 0x12, 0x19, 0x0a,
	0x08, 0x74, 0x6f, 0x5f, 0x6d, 0x6f, 0x6e, 0x65, 0x79, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0d, 0x52,
	0x07, 0x74, 0x6f, 0x4d, 0x6f, 0x6e, 0x65, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x62, 0x75, 0x66, 0x66,
	0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x62, 0x75, 0x66, 0x66, 0x65, 0x72,
	0x12, 0x2e, 0x0a, 0x04, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x04, 0x54, 0x69, 0x6d, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x73, 0x68, 0x61, 0x72, 0x64, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x06, 0x73, 0x68, 0x61, 0x72, 0x64, 0x73, 0x22, 0x82, 0x01, 0x0a, 0x08, 0x49, 0x6e, 0x73,
	0x65, 0x72, 0x74, 0x54, 0x78, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x14, 0x0a, 0x05, 0x6d, 0x6f, 0x6e, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05,
	0x6d, 0x6f, 0x6e, 0x65, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x62, 0x75, 0x66, 0x66, 0x65, 0x72, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x62, 0x75, 0x66, 0x66, 0x65, 0x72, 0x12, 0x2e, 0x0a,
	0x04, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x04, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x76, 0x0a,
	0x12, 0x52, 0x65, 0x6c, 0x61, 0x79, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x54, 0x78,
	0x53, 0x65, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x68, 0x61, 0x72, 0x64, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x06, 0x73, 0x68, 0x61, 0x72, 0x64, 0x73, 0x12, 0x31, 0x0a, 0x05, 0x64,
	0x61, 0x74, 0x61, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x75, 0x72, 0x64,
	0x2e, 0x61, 0x62, 0x63, 0x69, 0x2e, 0x6d, 0x69, 0x6e, 0x69, 0x62, 0x61, 0x6e, 0x6b, 0x2e, 0x42,
	0x61, 0x6e, 0x6b, 0x44, 0x61, 0x74, 0x61, 0x52, 0x05, 0x64, 0x61, 0x74, 0x61, 0x73, 0x12, 0x15,
	0x0a, 0x06, 0x72, 0x61, 0x77, 0x5f, 0x74, 0x78, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05,
	0x72, 0x61, 0x77, 0x54, 0x78, 0x22, 0x5d, 0x0a, 0x0f, 0x52, 0x65, 0x6c, 0x61, 0x79, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x54, 0x78, 0x12, 0x31, 0x0a, 0x05, 0x64, 0x61, 0x74, 0x61,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x75, 0x72, 0x64, 0x2e, 0x61, 0x62,
	0x63, 0x69, 0x2e, 0x6d, 0x69, 0x6e, 0x69, 0x62, 0x61, 0x6e, 0x6b, 0x2e, 0x42, 0x61, 0x6e, 0x6b,
	0x44, 0x61, 0x74, 0x61, 0x52, 0x05, 0x64, 0x61, 0x74, 0x61, 0x73, 0x12, 0x17, 0x0a, 0x07, 0x74,
	0x78, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x74, 0x78,
	0x48, 0x61, 0x73, 0x68, 0x22, 0x47, 0x0a, 0x08, 0x42, 0x61, 0x6e, 0x6b, 0x44, 0x61, 0x74, 0x61,
	0x12, 0x12, 0x0a, 0x04, 0x6b, 0x65, 0x79, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04,
	0x6b, 0x65, 0x79, 0x73, 0x12, 0x0f, 0x0a, 0x03, 0x6f, 0x5f, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x02, 0x6f, 0x4b, 0x12, 0x16, 0x0a, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x22, 0xad, 0x01,
	0x0a, 0x13, 0x52, 0x65, 0x6c, 0x61, 0x79, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x54,
	0x78, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x41, 0x0a, 0x03, 0x74, 0x78, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x75, 0x72, 0x64, 0x2e, 0x61, 0x62, 0x63, 0x69, 0x2e, 0x6d, 0x69,
	0x6e, 0x69, 0x62, 0x61, 0x6e, 0x6b, 0x2e, 0x52, 0x65, 0x6c, 0x61, 0x79, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x66, 0x65, 0x72, 0x54, 0x78, 0x4c, 0x69, 0x73, 0x74, 0x2e, 0x54, 0x78, 0x73, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x52, 0x03, 0x74, 0x78, 0x73, 0x1a, 0x53, 0x0a, 0x08, 0x54, 0x78, 0x73, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x31, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x75, 0x72, 0x64, 0x2e, 0x61, 0x62, 0x63, 0x69,
	0x2e, 0x6d, 0x69, 0x6e, 0x69, 0x62, 0x61, 0x6e, 0x6b, 0x2e, 0x42, 0x61, 0x6e, 0x6b, 0x44, 0x61,
	0x74, 0x61, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x42, 0x22, 0x5a,
	0x20, 0x65, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x6f, 0x72, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f,
	0x75, 0x72, 0x64, 0x2f, 0x61, 0x62, 0x63, 0x69, 0x2f, 0x6d, 0x69, 0x6e, 0x69, 0x62, 0x61, 0x6e,
	0x6b, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_urd_abci_minibank_types_proto_rawDescOnce sync.Once
	file_proto_urd_abci_minibank_types_proto_rawDescData = file_proto_urd_abci_minibank_types_proto_rawDesc
)

func file_proto_urd_abci_minibank_types_proto_rawDescGZIP() []byte {
	file_proto_urd_abci_minibank_types_proto_rawDescOnce.Do(func() {
		file_proto_urd_abci_minibank_types_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_urd_abci_minibank_types_proto_rawDescData)
	})
	return file_proto_urd_abci_minibank_types_proto_rawDescData
}

var file_proto_urd_abci_minibank_types_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_proto_urd_abci_minibank_types_proto_goTypes = []interface{}{
	(*TransferTx)(nil),            // 0: urd.abci.minibank.TransferTx
	(*InsertTx)(nil),              // 1: urd.abci.minibank.InsertTx
	(*RelayTransferTxSet)(nil),    // 2: urd.abci.minibank.RelayTransferTxSet
	(*RelayTransferTx)(nil),       // 3: urd.abci.minibank.RelayTransferTx
	(*BankData)(nil),              // 4: urd.abci.minibank.BankData
	(*RelayTransferTxList)(nil),   // 5: urd.abci.minibank.RelayTransferTxList
	nil,                           // 6: urd.abci.minibank.RelayTransferTxList.TxsEntry
	(*third_party.Timestamp)(nil), // 7: google.protobuf.Timestamp
}
var file_proto_urd_abci_minibank_types_proto_depIdxs = []int32{
	7, // 0: urd.abci.minibank.TransferTx.Time:type_name -> google.protobuf.Timestamp
	7, // 1: urd.abci.minibank.InsertTx.Time:type_name -> google.protobuf.Timestamp
	4, // 2: urd.abci.minibank.RelayTransferTxSet.datas:type_name -> urd.abci.minibank.BankData
	4, // 3: urd.abci.minibank.RelayTransferTx.datas:type_name -> urd.abci.minibank.BankData
	6, // 4: urd.abci.minibank.RelayTransferTxList.txs:type_name -> urd.abci.minibank.RelayTransferTxList.TxsEntry
	4, // 5: urd.abci.minibank.RelayTransferTxList.TxsEntry.value:type_name -> urd.abci.minibank.BankData
	6, // [6:6] is the sub-list for method output_type
	6, // [6:6] is the sub-list for method input_type
	6, // [6:6] is the sub-list for extension type_name
	6, // [6:6] is the sub-list for extension extendee
	0, // [0:6] is the sub-list for field type_name
}

func init() { file_proto_urd_abci_minibank_types_proto_init() }
func file_proto_urd_abci_minibank_types_proto_init() {
	if File_proto_urd_abci_minibank_types_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_urd_abci_minibank_types_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TransferTx); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_urd_abci_minibank_types_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InsertTx); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_urd_abci_minibank_types_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RelayTransferTxSet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_urd_abci_minibank_types_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RelayTransferTx); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_urd_abci_minibank_types_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BankData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_urd_abci_minibank_types_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RelayTransferTxList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_urd_abci_minibank_types_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_proto_urd_abci_minibank_types_proto_goTypes,
		DependencyIndexes: file_proto_urd_abci_minibank_types_proto_depIdxs,
		MessageInfos:      file_proto_urd_abci_minibank_types_proto_msgTypes,
	}.Build()
	File_proto_urd_abci_minibank_types_proto = out.File
	file_proto_urd_abci_minibank_types_proto_rawDesc = nil
	file_proto_urd_abci_minibank_types_proto_goTypes = nil
	file_proto_urd_abci_minibank_types_proto_depIdxs = nil
}
